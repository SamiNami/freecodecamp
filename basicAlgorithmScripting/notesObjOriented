// some basci object stuff
var car = {
  "wheels":4,
  "engines":1,
  "seats":5
};
//creating a constructor function

var Car = function() {
  this.wheels = 4;
  this.engines = 1;
  this.seats = 5;
};

var MotorBike = function() {
  this.wheels = 2;
  this.engines =1;
  this.seats = 1;

};

//Creating a new object and giving it a new property


var Car = function() {
  this.wheels = 4;
  this.engines = 1;
  this.seats = 5;
};

//Only change code below this line.

var myCar = new Car();
myCar.nickname = "boostah";

/Making the object unique by passin parameters to our constructor

var Car = function(wheels, seats , engines) {
  //Change this constructor
  this.wheels = wheels;
  this.seats = seats;
  this.engines = engines;
};

/Try it out here
var myCar = new Car(15, 3 ,1);


// private and public properites in objects


var Car = function() {
  // this is a private variable
  var speed = 10;

  // these are public methods
  this.accelerate = function(change) {
    speed += change;
  };

  this.decelerate = function() {
    speed -= 5;
  };

  this.getSpeed = function() {
    return speed;
  };
};

var Bike = function() {


  var gear = 3;

  this.getGear = function(){
    return gear;
  };
  this.setGear = function(change){
    gear = change;
  };
};

var myCar = new Car();

var myBike = new Bike();


// using a map to ittereate through the entire array


var oldArray = [1,2,3,4,5];

// Only change code below this line.

var newArray = oldArray.map(function(x){
                     return x + 3;
                            });

// reduce , a way to itterate thoguth an array and condese it into one value

var array = [4,5,6,7,8];
var singleVal = 0;

// Only change code below this line.

singleVal = array.reduce(function(previousVal, currentVal){
  return previousVal + currentVal;
}, 0); // 0 aka the 2nd argument ,decides where the itteration starts

//Filterin out values


var oldArray = [1,2,3,4,5,6,7,8,9,10];

/ Only change code below this line.

var newArray = oldArray.filter(function(val){
    return val < 6;
});


// sort


var array = [1, 12, 21, 2];

// Only change code below this line.

array.sort(function(a,b){
  return b - a;
});

//  reverse

var array = [1,2,3,4,5,6,7];
var newArray = [];

// Only change code below this line.

newArray = array.reverse();

//concatenate arrays


var oldArray = [1,2,3];
var newArray = [];

var concatMe = [4,5,6];

/ Only change code below this line.

newArray = oldArray.concat(concatMe);

//splitting can be used to turn strings into arrays


var string = "Split me into an array";
var array = [];

/ Only change code below this line.

array = string.split(" ");

//join, joining arrays into a string


var joinMe = ["Split","me","into","an","array"];
var joinedString = '';

/ Only change code below this line.

joinedString = joinMe.join(" ");
